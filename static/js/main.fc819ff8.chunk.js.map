{"version":3,"sources":["reducers/index.js","reducers/moviesReducer.js","actions/types.js","reducers/movieReducer.js","reducers/creditsReducer.js","reducers/personReducer.js","reducers/errorReducer.js","store.js","config/api-key.js","utils/truncateText.js","components/CircleProgressBar/circle-progress-bar-view.js","components/MovieCard/moviecard-view.js","components/MovieList/movielist-view.js","components/MovieList/movielist-container.js","components/MovieList/movielist-redux.js","actions/getMovies.js","screens/Movie/List/index.js","components/moviedetails-components/ActorCard/actorcard-view.js","components/moviedetails-components/actorcard-components/ActorDetail/actordetail-view.js","components/moviedetails-components/actorcard-components/ActorDetail/actordetail-container.js","components/moviedetails-components/actorcard-components/ActorDetail/actordetail-redux.js","actions/getPerson.js","components/moviedetails-components/Modal/ModalInner/modal-inner-view.js","components/moviedetails-components/Modal/ModalTemplate1/modal-template1-view.js","components/moviedetails-components/Modal/modal-view.js","components/moviedetails-components/ActorCard/actorcard-container.js","components/MovieDetails/moviedetails-view.js","components/MovieDetails/moviedetails-container.js","components/MovieDetails/moviedetails-redux.js","actions/getCredits.js","actions/getMovie.js","screens/Movie/Detail/index.js","components/Navbar.js","screens/Root.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","movies","state","action","type","popMovies","payload","map","movie","id","original_title","poster_path","overview","vote_average","release_date","credits","cast","actor","person","error","store","createStore","rootReducer","compose","applyMiddleware","thunk","API_Key","truncate","str","no_words","split","splice","join","CircularProgressBar","props","sqSize","this","radius","strokeWidth","viewBox","dashArray","Math","PI","dashOffset","percentage","width","height","className","style","minWidth","cx","cy","r","transform","strokeDasharray","strokeDashoffset","x","y","dy","textAnchor","React","Component","defaultProps","MovieCardView","src","alt","toFixed","MovieLink","to","MovieRow","rowItems","index","key","withRouter","MovieListContainer","window","innerWidth","updateWindowDimensions","bind","setState","innerHeight","movieRows","getMovies","addEventListener","prevProps","removeEventListener","moviesTotal","length","rowTotal","i","row","j","push","Dimmer","active","Loader","size","MovieListRedux","connect","dispatch","a","async","fetch","movieListRaw","movieList","json","fetchPopMovies","then","res","results","catch","err","ScreensMovieList","ActorCardView","onClick","handleOpen","profile_path","name","character","ActorDetailView","place_of_birth","birthday","popularity","ActorDetailContainer","getPerson","ActorDetailRedux","person_id","personRaw","fetchPerson","ModalInnerView","prevState","open","display","render","ModalTemplate1","content","JSX_MODAL","button","Modal","useState","setOpen","e","preventDefault","document","body","classList","remove","add","ReactDOM","createPortal","querySelector","ActorCardContainer","MovieDetails","selectedMovie","actors","Segment","padded","raised","Item","Group","Image","Content","fontSize","Header","as","Meta","fontWeight","Description","Extra","Label","color","slice","MovieDetailsContainer","getCredits","getUrlId","getMovie","match","url","pop","undefined","MovieDetailsRedux","movie_id","creditsListRaw","creditsList","fetchCredits","movieRaw","fetchMovie","ScreenMovieDetail","Container","Navbar","Menu","inverted","fixed","header","Link","ScreensRoot","basename","exact","path","component","ScreensMovieDetail","App","Root","Boolean","location","hostname","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc819ff8.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport moviesReducer from \"./moviesReducer\";\nimport movieReducer from \"./movieReducer\";\nimport creditsReducer from \"./creditsReducer\";\nimport personReducer from \"./personReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  movies: moviesReducer,\n  movie: movieReducer,\n  credits: creditsReducer,\n  person: personReducer,\n  error: errorReducer\n});\n","import { GET_MOVIES } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_MOVIES:\n      return {\n        ...state,\n        popMovies: action.payload.map(movie => {\n          return {\n            id: movie.id,\n            original_title: movie.original_title,\n            poster_path: movie.poster_path,\n            overview: movie.overview,\n            vote_average: movie.vote_average,\n            release_date: movie.release_date\n          };\n        })\n      };\n    default:\n      return state;\n  }\n}\n","export const GET_MOVIES = \"GET_MOVIES\";\nexport const GET_MOVIE = \"GET_MOVIE\";\nexport const GET_CREDITS = \"GET_CREDITS\";\nexport const GET_PERSON = \"GET_PERSON\";\nexport const GET_ERRORS = \"GET_ERRORS\";\n","import { GET_MOVIE } from \"../actions/types\";\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case GET_MOVIE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_CREDITS } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_CREDITS:\n      return {\n        ...state,\n        cast: action.payload.cast.map(actor => {\n          return {\n            ...actor\n          };\n        })\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_PERSON } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_PERSON:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst inititalState = {};\n\nconst store = createStore(\n  rootReducer,\n  inititalState,\n  compose(applyMiddleware(thunk))\n);\n\nexport default store;\n","export const API_Key = \"e9ecd9753d3ef861ac4dc7577bda8e35\";\r\n","export const truncate = (str, no_words) => {\r\n  return str\r\n    .split(\" \")\r\n    .splice(0, no_words)\r\n    .join(\" \");\r\n};\r\n","import React from \"react\";\r\nimport \"./circle-progress-bar.scss\";\r\n\r\nexport default class CircularProgressBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    // Size of the enclosing square\r\n    const sqSize = this.props.sqSize;\r\n    // SVG centers the stroke width on the radius, subtract out so circle fits in square\r\n    const radius = (this.props.sqSize - this.props.strokeWidth) / 2;\r\n    // Enclose cicle in a circumscribing square\r\n    const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n    // Arc length at 100% coverage is the circle circumference\r\n    const dashArray = radius * Math.PI * 2;\r\n    // Scale 100% coverage overlay with the actual percent\r\n    const dashOffset = dashArray - (dashArray * this.props.percentage) / 10;\r\n\r\n    return (\r\n      <svg\r\n        width={this.props.sqSize}\r\n        height={this.props.sqSize}\r\n        viewBox={viewBox}\r\n        className=\"circular-progress\"\r\n        style={{ minWidth: this.props.sqSize }}\r\n      >\r\n        <circle\r\n          className=\"circle-background\"\r\n          cx={this.props.sqSize / 2}\r\n          cy={this.props.sqSize / 2}\r\n          r={radius}\r\n          strokeWidth={`${this.props.strokeWidth}px`}\r\n        />\r\n        <circle\r\n          className=\"circle-progress\"\r\n          cx={this.props.sqSize / 2}\r\n          cy={this.props.sqSize / 2}\r\n          r={radius}\r\n          strokeWidth={`${this.props.strokeWidth}px`}\r\n          // Start progress marker at 12 O'Clock\r\n          transform={`rotate(-80 ${this.props.sqSize / 2} ${this.props.sqSize /\r\n            2})`}\r\n          style={{\r\n            strokeDasharray: dashArray,\r\n            strokeDashoffset: dashOffset\r\n          }}\r\n        />\r\n        <text\r\n          className=\"circle-text\"\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          dy=\".3em\"\r\n          textAnchor=\"middle\"\r\n        >\r\n          {`${this.props.percentage}`}\r\n        </text>\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n\r\nCircularProgressBar.defaultProps = {\r\n  sqSize: 200,\r\n  percentage: 25,\r\n  strokeWidth: 10\r\n};\r\n","import React from \"react\";\r\nimport \"./moviecard.scss\";\r\nimport { truncate } from \"../../utils/truncateText\";\r\nimport CircleProgress from \"../CircleProgressBar\";\r\n\r\nconst MovieCardView = props => {\r\n  const { movie } = props;\r\n\r\n  return (\r\n    <article className=\"moviecard\">\r\n      <img src={props.src} alt=\"\" className=\"poster\" />\r\n      <div className=\"content\">\r\n        <i className=\"fas fa-arrow-right\"></i>\r\n        <div className=\"top\">\r\n          <CircleProgress\r\n            percentage={movie.vote_average.toFixed(1)}\r\n            sqSize={50}\r\n            strokeWidth={8}\r\n          />\r\n\r\n          <div className=\"meta-data\">\r\n            <h1>{truncate(movie.original_title, 6)}</h1>\r\n            <p>{movie.release_date.split(\"-\")[0]}</p>\r\n          </div>\r\n        </div>\r\n        <p className=\"overview\">{truncate(movie.overview, 30) + \" . . .\"}</p>\r\n        <p className=\"more-info\">More Info</p>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default MovieCardView;\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport MovieCard from \"../MovieCard\";\r\nimport \"./movielist.scss\";\r\n\r\nconst MovieList = props => {\r\n  return (\r\n    <div className=\"movielist\">\r\n      {props.movies.map((rowItems, index) => (\r\n        <MovieRow key={index} rowItems={rowItems} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MovieLink = props => (\r\n  <Link to={`${props.movie.id}`}>\r\n    <MovieCard\r\n      to={`${props.movie.id}`}\r\n      src={`http://image.tmdb.org/t/p/w500/${props.movie.poster_path}`}\r\n      movie={props.movie}\r\n    />\r\n  </Link>\r\n);\r\nconst MovieRow = props => (\r\n  <div className=\"movierow\">\r\n    {props.rowItems.map((movie, index) => (\r\n      <MovieLink key={index} movie={movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default withRouter(MovieList);\r\n","import React, { Component } from \"react\";\r\nimport MovieList from \"./movielist-view\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nclass MovieListContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { movies: [], width: window.innerWidth };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    this.setState({ movies: this.movieRows() });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getMovies();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.popMovies !== this.props.popMovies) {\r\n      this.setState({ movies: this.movieRows() });\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n  movieRows() {\r\n    if (!this.props.popMovies) return null;\r\n    const { popMovies } = this.props;\r\n    let moviesTotal = this.props.popMovies.length;\r\n    let movies = [];\r\n    let rowTotal =\r\n      this.state.width <= 940 ? 1 : this.state.width <= 1200 ? 2 : 3;\r\n\r\n    for (let i = 0; i < moviesTotal; i += rowTotal) {\r\n      let row = [];\r\n\r\n      for (let j = 0; j < rowTotal; j++) {\r\n        if (popMovies[i + j] != null) row.push(popMovies[i + j]);\r\n      }\r\n      movies.push(row);\r\n    }\r\n    return movies;\r\n  }\r\n  render() {\r\n    const { movies } = this.state;\r\n    const { error } = this.props;\r\n    return movies.length !== 0 ? (\r\n      <MovieList movies={movies} error={error} />\r\n    ) : (\r\n      <Dimmer active>\r\n        <Loader size=\"massive\" />\r\n      </Dimmer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovies } from \"../../actions/getMovies\";\r\nimport MovieListContainer from \"./movielist-container\";\r\n\r\nclass MovieListRedux extends Component {\r\n  render() {\r\n    const { getMovies, popMovies, error } = this.props;\r\n    return (\r\n      <MovieListContainer\r\n        getMovies={getMovies}\r\n        popMovies={popMovies}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  popMovies: state.movies.popMovies,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { getMovies })(MovieListRedux);\r\n","import { GET_MOVIES, GET_ERRORS } from \"./types\";\nimport { API_Key } from \"../config/api-key\";\n\nconst fetchPopMovies = async () => {\n  const movieListRaw = await fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${API_Key}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`\n  );\n  const movieList = movieListRaw.json();\n  return movieList;\n};\n\nexport const getMovies = () => dispatch => {\n  fetchPopMovies()\n    .then(res => {\n      dispatch({\n        type: GET_MOVIES,\n        payload: res.results\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n};\n","import React from \"react\";\r\nimport MovieList from \"../../../components/MovieList\";\r\n\r\nconst ScreensMovieList = props => {\r\n  return (\r\n    <div className=\"screen-movielist\">\r\n      <h1>Latest Movies</h1>\r\n      <MovieList {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreensMovieList;\r\n","import React from \"react\";\r\nimport \"./actorcard.scss\";\r\n\r\nconst ActorCardView = props => {\r\n  return (\r\n    <li className=\"actorcard\" onClick={props.actor.handleOpen}>\r\n      <div>\r\n        <img\r\n          src={`http://image.tmdb.org/t/p/w500/${props.actor.profile_path}`}\r\n          alt=\"actor\"\r\n        />\r\n        <div className=\"actor-data\">\r\n          <h3>{props.actor.name}</h3>\r\n          <p>{props.actor.character}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ActorCardView;\r\n","import React from \"react\";\r\nimport \"./actordetail.scss\";\r\n\r\nconst ActorDetailView = props => {\r\n  const { person } = props;\r\n  return (\r\n    <li className=\"actor-detail\">\r\n      <div>\r\n        <img\r\n          src={`http://image.tmdb.org/t/p/w500/${person.profile_path}`}\r\n          alt=\"actor\"\r\n        />\r\n        <div className=\"actor-data\">\r\n          <h3>{person.name}</h3>\r\n          <p>Place of Birth:</p>\r\n          <b>{person.place_of_birth}</b>\r\n          <p>Birthday:</p>\r\n          <b>{person.birthday}</b>\r\n          <p>Popularity:</p> <b>{person.popularity}</b>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ActorDetailView;\r\n","import React, { Component } from \"react\";\r\nimport ActorDetailView from \"./actordetail-view\";\r\n\r\nclass ActorDetailContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { person: this.props.person };\r\n  }\r\n  componentDidMount() {\r\n    this.props.getPerson(this.props.actor.id);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.person !== this.props.person) {\r\n      this.setState({ person: this.props.person });\r\n    }\r\n  }\r\n  render() {\r\n    const { person } = this.state;\r\n    return person ? <ActorDetailView person={person} /> : \"\";\r\n  }\r\n}\r\n\r\nexport default ActorDetailContainer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getPerson } from \"../../../../actions/getPerson\";\r\nimport ActorDetailContainer from \"./actordetail-container\";\r\n\r\nclass ActorDetailRedux extends Component {\r\n  render() {\r\n    const { getPerson, person, actor } = this.props;\r\n    return (\r\n      <ActorDetailContainer\r\n        getPerson={getPerson}\r\n        person={person}\r\n        actor={actor}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  person: state.person\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPerson })(ActorDetailRedux);\r\n","import { GET_PERSON, GET_ERRORS } from \"./types\";\nimport { API_Key } from \"../config/api-key\";\n\nconst fetchPerson = async person_id => {\n  const personRaw = await fetch(\n    `https://api.themoviedb.org/3/person/${person_id}?api_key=${API_Key}`\n  );\n  const person = personRaw.json();\n  return person;\n};\n\nexport const getPerson = person_id => dispatch => {\n  fetchPerson(person_id)\n    .then(res => {\n      dispatch({\n        type: GET_PERSON,\n        payload: res\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n};\n","import React, { Component } from \"react\";\r\n//\r\nimport \"./modal-inner.scss\";\r\n\r\nclass ModalInnerView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { open: true };\r\n  }\r\n  handleOpen = () => {\r\n    this.setState(prevState => ({\r\n      open: !prevState.open\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          id=\"myModal\"\r\n          className=\"modal\"\r\n          style={{ display: this.state.open ? \"flex\" : \"none\" }}\r\n        >\r\n          {this.props.render(this.handleOpen)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalInnerView;\r\n","import React from \"react\";\r\n//\r\nimport \"./modal-template1.scss\";\r\n\r\nconst ModalTemplate1 = props => {\r\n  return (\r\n    <div className=\"modal-template1\">\r\n      <span onClick={props.handleOpen} className=\"close\">\r\n        &times;\r\n      </span>\r\n      <div className=\"modal-body\">{props.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTemplate1;\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//\r\nimport ModalInner from \"./ModalInner\";\r\nimport ModalTemplate1 from \"./ModalTemplate1\";\r\nimport \"./modal.scss\";\r\n\r\nconst JSX_MODAL = props => {\r\n  return (\r\n    <ModalInner\r\n      button={props.button}\r\n      render={handleOpen => (\r\n        <ModalTemplate1 handleOpen={props.handleOpen} content={props.content} />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nfunction Modal(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = e => {\r\n    e.preventDefault();\r\n    if (!open) {\r\n      document.body.classList.add(\"modal-open\");\r\n    } else {\r\n      document.body.classList.remove(\"modal-open\");\r\n    }\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <>\r\n      {ReactDOM.createPortal(\r\n        open ? <JSX_MODAL {...props} handleOpen={handleOpen} /> : null,\r\n        document.querySelector(\"#modal\")\r\n      )}\r\n      <div onClick={handleOpen}>{props.button}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ActorCard from \"./actorcard-view\";\r\nimport ActorCardDetail from \"../actorcard-components/ActorDetail\";\r\nimport Modal from \"../Modal\";\r\n\r\nclass ActorCardContainer extends Component {\r\n  render() {\r\n    const { actor } = this.props;\r\n    return (\r\n      <>\r\n        <Modal\r\n          button={<ActorCard actor={actor} />}\r\n          content={<ActorCardDetail actor={actor} />}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ActorCardContainer;\r\n","import React from \"react\";\nimport { Segment, Item, Label } from \"semantic-ui-react\";\nimport ActorCard from \"../moviedetails-components/ActorCard\";\nimport \"./moviedetails.scss\";\n\nconst MovieDetails = props => {\n  const { selectedMovie, actors } = props;\n  return (\n    <div className=\"moviedetails\">\n      <Segment padded=\"very\" raised>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              src={`http://image.tmdb.org/t/p/w185/${selectedMovie.poster_path}`}\n            />\n\n            <Item.Content style={{ fontSize: \"1.25em\" }}>\n              <Item.Header as=\"a\">{selectedMovie.original_title}</Item.Header>\n              <Item.Meta style={{ fontWeight: \"bold\" }}>\n                ({selectedMovie.release_date.split(\"-\")[0]})\n              </Item.Meta>\n              <Item.Description>{selectedMovie.overview}</Item.Description>\n              <Item.Extra>\n                <Label size=\"large\" color=\"blue\">\n                  {selectedMovie.vote_average}/10\n                </Label>\n              </Item.Extra>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <div className=\"cast-section\">\n        {actors.slice(0, 6).map((actor, index) => (\n          <ActorCard key={index} actor={actor} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nimport MovieDetails from \"./moviedetails-view\";\r\n\r\nclass MovieDetailsContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.getCredits(this.getUrlId());\r\n    this.props.getMovie(this.getUrlId());\r\n  }\r\n\r\n  getUrlId() {\r\n    let parts = this.props.match.url.split(\"/\");\r\n    const urlId = parts.pop();\r\n    return urlId;\r\n  }\r\n\r\n  render() {\r\n    const { movie, cast } = this.props;\r\n    return movie != undefined ? (\r\n      <MovieDetails selectedMovie={movie} actors={cast} />\r\n    ) : (\r\n      <Dimmer active>\r\n        <Loader size=\"massive\" />\r\n      </Dimmer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieDetailsContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCredits } from \"../../actions/getCredits\";\r\nimport { getMovie } from \"../../actions/getMovie\";\r\nimport MovieDetailsContainer from \"./moviedetails-container\";\r\n\r\nclass MovieDetailsRedux extends Component {\r\n  render() {\r\n    const { getCredits, getMovie, popMovies, cast, movie } = this.props;\r\n    return (\r\n      <MovieDetailsContainer\r\n        getCredits={getCredits}\r\n        getMovie={getMovie}\r\n        popMovies={popMovies}\r\n        cast={cast}\r\n        movie={movie}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  popMovies: state.movies.popMovies,\r\n  cast: state.credits.cast,\r\n  movie: state.movie\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCredits, getMovie })(\r\n  MovieDetailsRedux\r\n);\r\n","import { GET_CREDITS, GET_ERRORS } from \"./types\";\nimport { API_Key } from \"../config/api-key\";\n\nconst fetchCredits = async movie_id => {\n  const creditsListRaw = await fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=${API_Key}`\n  );\n  const creditsList = creditsListRaw.json();\n  return creditsList;\n};\n\nexport const getCredits = movie_id => dispatch => {\n  fetchCredits(movie_id)\n    .then(res => {\n      dispatch({\n        type: GET_CREDITS,\n        payload: res\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n};\n","import { GET_MOVIE, GET_ERRORS } from \"./types\";\nimport { API_Key } from \"../config/api-key\";\n\nconst fetchMovie = async movie_id => {\n  const movieRaw = await fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_Key}`\n  );\n  const movie = movieRaw.json();\n  return movie;\n};\n\nexport const getMovie = movie_id => dispatch => {\n  fetchMovie(movie_id)\n    .then(res => {\n      dispatch({\n        type: GET_MOVIE,\n        payload: res\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n};\n","import React from \"react\";\r\nimport MovieDetail from \"../../../components/MovieDetails\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nimport \"./moviedetail.scss\";\r\n\r\nconst ScreenMovieDetail = props => {\r\n  return (\r\n    <div className=\"screen-moviedetail\">\r\n      <Container>\r\n        <MovieDetail {...props} />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScreenMovieDetail;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Menu } from \"semantic-ui-react\";\n\nconst Navbar = () => (\n  <Menu inverted size=\"massive\" fixed=\"top\">\n    <Container>\n      <Menu.Item header>The Movie Database</Menu.Item>\n      <Menu.Item as={Link} to=\"/\">\n        Home\n      </Menu.Item>\n    </Container>\n  </Menu>\n);\n\nexport default Navbar;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n//\r\nimport ScreensMovieList from \"./Movie/List\";\r\nimport ScreensMovieDetail from \"./Movie/Detail\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst ScreensRoot = () => (\r\n  <div style={{ height: \"100%\" }}>\r\n    <Router basename=\"/movies\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={ScreensMovieList} />\r\n        <Route exact path=\"/:movie\" component={ScreensMovieDetail} />\r\n      </Switch>\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nexport default ScreensRoot;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Root from \"./screens/Root\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}